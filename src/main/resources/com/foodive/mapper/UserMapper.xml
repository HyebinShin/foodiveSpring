<?xml version="1.0" encoding="utf-8" ?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foodive.mapper.UserMapper">

    <sql id="criteria">
        <![CDATA[
        (
            select /*+ index_desc(tbl_user pk_user) */
                rownum rn, tbl_user.*
            from
                tbl_user
            where
                rownum <= #{cri.pageNum} * #{cri.amount}
        )
        where rn > (#{cri.pageNum} - 1) * #{cri.amount}
        ]]>
    </sql>

    <select id="getListWithPaging" resultType="com.foodive.domain.UserVO">
        select *
        from
        <include refid="criteria"></include>
    </select>

    <select id="getTotalUser" resultType="int">
        select count(*) from tbl_user where state = #{state}
    </select>

    <insert id="insert">
        insert into tbl_user(
                             uno, id, password, name, email,
                             sex, birthday, phone, zipcode, address1, address2, state)
        values (seq_user.nextval, #{id}, #{password}, #{name}, #{email},
                #{sex, jdbcType=VARCHAR}, #{birthday, jdbcType=DATE}, #{phone, jdbcType=VARCHAR},
                #{zipcode, jdbcType=VARCHAR}, #{address1, jdbcType=VARCHAR}, #{address2, jdbcType=VARCHAR}, 1)
    </insert>

    <select id="duplicated" resultType="int">
        select /*+ index_desc(tbl_user pk_user) */ count(uno)
        from tbl_user
        where id = #{id}
    </select>

    <select id="get" resultType="com.foodive.domain.UserVO">
        select /*+ index_desc(tbl_user pk_user) */ *
        from tbl_user
        where id = #{user.id}
    <if test="user.password!=null">
        and password = #{user.password}
    </if>
    </select>

    <update id="drop">
        update tbl_user
        set state = 0
        where id = #{id}
    </update>

    <update id="update">
        update tbl_user
        set
            <choose>
            <when test="check==true">
                password = #{user.password}
            </when>
            <otherwise>
                email = #{user.email},
                phone = #{user.phone, jdbcType=VARCHAR},
                zipcode = #{user.zipcode, jdbcType=VARCHAR},
                address1 = #{user.address1, jdbcType=VARCHAR},
                address2 = #{user.address2, jdbcType=VARCHAR}
            </otherwise>
            </choose>
        where id = #{user.id}
    </update>
    


</mapper>